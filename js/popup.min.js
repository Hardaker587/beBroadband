;
(function($) {
	var isWebkit = 'WebkitAppearance' in document.documentElement.style;
	$.fn.showLoading = function(msg) {
		var loadingText = msg || 'Loading please wait..';
		return this.addClass('ajax-loading').append('<span class="ajax-loading-text">'+loadingText+'</span>');
	};
	$.fn.hideLoading = function() {
		return this.removeClass('ajax-loading').find('.ajax-loading-text').remove();
	};
	var testDiv;
	$.htmlSpecialChars = function(str) {
		if (!testDiv) testDiv = $(document.createElement("div"));
		return testDiv.text(str)[0].innerHTML;
	};
	$.fn.popup = function(data) {
		return this.each(function() {
			var self = $(this),
				api = self.data('popup');
			if (self.hasClass('popup') && api) {
				if (data == 'show') self.show().trigger('shown');
				if (data == 'hide') self.trigger('hide').hide().trigger('hidden');
			}
		});
	};
	var initPopupResize = false;
	$.popup = function(data) {
		var id = +new Date(),
			scroll = $('<div class="popup-scrollable" data-popup-id="' + id + '" ></div>'),
			backdrop = $('<div class="popup-backdrop" data-popup-id="' + id + '" ></div>'),
			popup = $(['<div class="popup ' + (data.cls || '') + '" style="' + (data.width ? 'width:' + data.width : '') + ';" >', '<div class="popup-header" ></div>', '<div class="popup-body" ></div>', '<div class="popup-footer" ></div>'].join(''));
		popup.data('popup-id', id);
		$('.popup-hidden').trigger('popup.hidden').each(function() {
			var api = $(this).data('popup');
			if (api) {
				api.popup.remove();
				api.backdrop.remove();
				api.scroll.remove();
				popup.data('popup', null);
			}
		});
		data = $.extend(data || {}, {
			scroll: scroll,
			backdrop: backdrop,
			popup: popup
		}, true);
		popup.data('popup', data);
		data.showParent = function(parent) {
			var self = popup,
				api, parentData;
			while (self) {
				if (self[0] && self[0] == parent[0]) break;
				api = $(self).data('popup');
				if (api) {
					parentData = api.parent;
					api.child = null;
					api.parent = null;
					self.popup('hide');
					self = parentData;
				} else {
					api = null;
					self = null;
				}
			}
			if (!self) return;
			parentData = $(parent).data('popup');
			if (parentData) {
				parentData.child = null;
				parent.popup('show');
			}
		};
		popup.on('shown', function(e) {
			backdrop.show();
			scroll.show();
			var header = popup.find('.popup-header'),
				close = header.find('.popup-close');
		});
		popup.on('hide', function(e) {
			backdrop.hide();
			scroll.hide();
			if ($.isFunction(data.hide) && data.hide(popup) === false) {
				e.preventDefault();
				return;
			}
		});
		popup.on('hidden', function(e) {
			var parent = data.parent,
				api;
			if (data.child) return;
			if (data.parent) {
				if (data.destroy === true) while (parent) {
					api = $(parent).addClass('popup-hidden').data('popup');
					if (api) parent = api.parent;
					else parent = null;
				} else {
					$(data.parent).data('popup').child = null;
					var parentData = $(data.parent).data('popup');
					$(data.parent).on('shown.load-popup-scroll', function() {
						var self = $(this),
							scroll = self.data('popup-scrolltop');
						if (scroll) self.closest('.popup-scrollable').scrollTop(scroll);
						self.off('shown.load-popup-scroll');
					});
					$(data.parent).popup('show');
					popup.remove();
					backdrop.remove();
					scroll.remove();
					popup.data('popup', null);
				}
			} else {
				backdrop.hide();
				scroll.hide();
			}
			if (!data.cache) popup.addClass('popup-hidden');
		});
		if (data.parent) {
			$(data.parent).data('popup-scrolltop', $(data.parent).closest('.popup-scrollable').scrollTop());
			$(data.parent).data('popup').child = popup;
			$(data.parent).popup('hide');
		}
		backdrop.appendTo('body');
		popup.appendTo(scroll);
		scroll.appendTo('body');
		if (data.href) {
			popup.showLoading();
			$.ajax({
				method: data.method || 'get',
				url: data.href,
				success: function(html) {
					if (!$.trim(html).length) return popup.popup('hide');
					popup.hideLoading();
					popup.empty().append(html);
					if (!popup.find('.popup-body').length) {
						debug.error('No Length');
						return popup.popup('hide');
					}
					if ($.isFunction(data.load)) data.load(popup);
					popup.popup('show');
				},
				dataType: 'html',
				error: function() {
					popup.popup('hide');
				}
			});
		} else {
			popup.find('.popup-header').append(data.header || '').prepend(data.closable == false ? '' : '<a class="popup-close" data-dismiss="popup" aria-hidden="true"><i class="fa fa-remove" ></i></a>');
			popup.find('.popup-footer').append(data.footer || '');
			popup.find('.popup-body').append(data.body || '');
			if ($.isFunction(data.load)) data.load(popup);
			popup.popup('show');
		}
		return popup;
	};
	$.fn.fileUploader = function(options) {
		var ret = this;
		this.each(function(index) {
			if (!$(this).is(':file')) return;
			var self, original, data, widget, opt = $.isPlainObject(options) ? $.extend({}, options, true) : {};
			self = $(this);
			if (self.data('fileuploader')) {
				widget = self.closest('.fileuploader');
				self.data('fileuploader', null).off('change.fileuploader').insertAfter(widget);
				widget.remove();
			}
			widget = $(['<div class="fileuploader" >', '<div class="fileuploader-buttons" >', '<span class="btn btn-primary btn-file pull-left"><span class="fileupload-new">Select File</span></span>', '<span class="btn fileupload-remove pull-left hide">Undo</span>', '<div class="clearfix" ></div>', '</div>', '<div class="fileuploader-preview" ></div>', '</div>'].join(''));
			data = {
				hasFile: function() {
					return widget.find('.fileuploader-preview').children().length > 0 && !widget.find('.fileuploader-original').length;
				},
				setFile: function(file) {
					var preview = widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + (file.file_extension || '').toLowerCase() + '" ></span>', '<span class="fileuploader-text" >', '<strong>', $.htmlSpecialChars(file.file_name || ''), '</strong>', '(', $.htmlSpecialChars(file.file_mime_type || 'n/a'), ') ', ' - ', bytes(file.file_size, true), ', last modified: ', file.file_last_modified, '</span>', '</div>'].join('')),
						width = preview.width();
					if (file.file_mime_type.substr(0, 6) == 'image/') {
						var wrap = $('<span class="fileuploader-image" ></span>').prependTo(preview).showLoading();
						$('<img src="' + datatill.url('files/output_file/' + file.file_id) + '" style="visibility:visible;max-width:100%;" />').load(function() {
							wrap.hideLoading();
						}).prependTo(wrap);
					}
					original = preview.children();
					return this;
				},
				showInput: function() {
					self.show();
					widget.find('.btn-file').append(self);
				},
				hideInput: function() {
					self.detach();
				},
				setError: function(error) {
					widget.append('<span class="error-text help-block text-danger" >' + $.htmlSpecialChars(error) + '</span>');
				}
			};
			self.replaceWith(widget).data('fileuploader', data);
			widget.find('.fileupload-remove').click(function() {
				var preview = widget.find('.fileuploader-preview').empty();
				if (original && original.length) preview.append(original);
				$(this).hide();
			});
			if (opt.file) data.setFile(opt.file);
			self.on('change.fileuploader', function(e) {
				if (window.File && window.FileReader && window.FileList && window.Blob && !isWebkit) {
					var file = e.target.files[0],
						val, ext, reader, preview, img, width = 0,
						dt;
					if (file) {
						dt = file.lastModifiedDate;
						val = ['<strong>', $.htmlSpecialChars(file.name), '</strong>', '(', $.htmlSpecialChars(file.type || 'n/a'), ') ', ' - ', bytes(file.size, true), ', last modified: ', dt ? [dt.getFullYear(), '-', dt.getMonth(), '-', dt.getDate(), ' ', dt.getHours(), ':', dt.getMinutes(), ':', dt.getSeconds()].join('') : 'n/a'].join('');
						ext = (file.name || '').split('.').pop().toLowerCase();
						if ((file.type && file.type.substr(0, 6) == 'image/')) {
							widget.find('.fileuploader-preview').html(['<span class="fileuploader-image" ></span>', '<div class="fileuploader-plain file-uploader-original" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
							preview = widget.find('.fileuploader-image');
							width = preview.width();
							var reader = new FileReader();
							reader.onload = function(e) {
								img = $('<img src="' + e.target.result + '" style="visibility:hidden;" />').load(function() {
									var w = $(this).width();
									$(this).css('visibility', 'visible');
									if (w > width) $(this).width(width);
								}).appendTo(preview);
							};
							reader.readAsDataURL(file);
						} else widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
					}
				} else {
					val = self.val() + '', ext = val.split('.').pop().toLowerCase();
					widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
				}
				widget.find('.fileupload-remove').show();
			});
			data.showInput();
		});
		return ret;
	};
	$.uploadModal = function(config) {
		config = config || {};
		if (!config.file_id) delete config.file_id;
		var url = datatill.url('files/upload_file/' + (config.file_id || 0) + '/' + (config.thumb || 0)),
			name = 'file_upload_frame_' + (+new Date()),
			popup = $.popup({
				header: '<h4><i class="icon-file" ></i> File</h4>',
				body: [
					'<form method="post" enctype="multipart/form-data" target="' + name + '" action="' + url + '" >',
						'<div class="fileupload fileupload-new" data-provides="fileupload">', config.info ||
							'<div class="well" >',
								'<input type="file" name="file_upload" style="display:none;" />',
								'<hr style="margin-top: 5px; margin-bottom: 5px;">',
								'<div class="input-group center-block">',
									'<label style="display:none;">Name</label>',
									'<input style="display:none;" type="text" name="file_upload[file_name]" class="form-control input-lg" value="file">',
								'</div>',
								'<div class="input-group center-block">',
									'<label style="display:none">Description</label>',
									'<textarea name="file_upload[file_caption]" class="form-control input-lg" style="resize:none;" rows=2 ></textarea>',
								'</div>',
								'<div class="clearfix"></div>',
							'</div>',
						'</div>',
					'</form>'
					].join(''),
				footer: ['<a class="btn btn-inverse pull-left" data-dismiss="popup" ><i class="icon icon-remove icon-white"></i> Close</a>', '<a class="btn btn-info pull-right btn-save-file" style="display:none;"  data-loading-text="Saving..." >Save <i class="icon icon-chevron-right icon-white"></i></a>'].join(''),
				parent: config.parent,
				load: function(popup) {
					popup.showLoading();
					var init = false,
						btn = popup.find('.btn-save-file').click(function() {
							form.submit();
						}),
						fileInput = popup.find(':file'),
						fileUploader, form = popup.find('form').submit(function() {
							fileUploader = fileInput.data('fileuploader');
							if (!fileUploader.hasFile()) fileUploader.hideInput();
							btn.button('loading');
						});
					var frame = $('<iframe name="' + name + '" src="' + url + '" style="display:none;" />').load(function() {
						var win = this.contentWindow,
							data = win.data,
							abort = false,
							resetFile = true;
						if (!$.isPlainObject(data)) data = {};
						if (!init) {
							init = true;
							popup.hideLoading();
							if (data.file_upload) {
								resetFile = false;
								fileInput.fileUploader({
									file: data.file_upload
								});
								form.append('<input type="hidden" value="' + $.htmlSpecialChars(data.file_upload.file_id) + '" name="file_upload[file_id]" />');
							} else {
								fileInput.fileUploader();
								form.append('<input type="hidden" value="' + $.htmlSpecialChars(config.file_relation || '') + '" name="file_upload[file_relation]" />');
								form.append('<input type="hidden" value="' + $.htmlSpecialChars(config.file_relation_id || 0) + '" name="file_upload[file_relation_id]" />');
							}
						} else if (fileUploader) fileUploader.showInput();
						if ($.isFunction(config.load)) config.load(data, popup);
						if ($.isFunction(config.save) && data.upload_id) abort = config.save(data, popup);
						if (abort === true) return;
						form.find('.error-text').remove();
						if (data.errors && !$.isEmptyObject(data.errors)) {
							$.each(data.errors, function(key, val) {
								var input = form.find('[name="' + key + '"]'),
									type = input.attr('type');
								if (type && type.toUpperCase() == 'FILE') {
									if (fileUploader) fileUploader.setError(val);
								} else if (input.length) $('<span class="error-text help-block text-danger" >' + val + '</span>').insertAfter(input);
							});
							form.prepend('<div class="error-text alert alert-danger" >Errors have occured</div>');
							popup.closest('.popup-scrollable').scrollTop(0);
						}
						if (data.file_upload) {
							if (resetFile) fileInput.data('fileuploader').setFile(data.file_upload);
							$.each(data.file_upload, function(key, val) {
								var input = form.find('[name="file_upload[' + key + ']"]');
								if (!input.length) form.append('<input type="hidden" name="file_upload[' + key + ']" value="' + $.htmlSpecialChars(val) + '" />');
								else input.val($.htmlSpecialChars(val));
							});
							var prev = popup.find('textarea[name="file_upload[file_caption]"]');
							popup.find('.btn-download-file').remove();
							$('<hr/><a class="btn btn-charcoal pull-right btn-download-file" style="margin-top: 10px; margin-bottom: -10px;" ><i class="fa fa-download "></i>&nbsp;Download </a><div class="clearfix" ></div>').insertAfter(prev);
							popup.find('.btn-download-file').click(function(e) {
								e.preventDefault();
								window.open(datatill.url('files/output_file/' + data.file_upload.id + '/download'), '_blank');
							});
							popup.find('.btn-delete-file').remove();
							$('<a class="btn  btn-danger pull-right btn-delete-file"  ><i class="icon icon-trash icon-white "></i>&nbsp; Delete </a>').click(function(e) {
								e.preventDefault();
								$.popup({
									parent: popup,
									header: '<h4>Confirm</h4>',
									body: '<div class="alert alert-danger"><strong>Are you sure you want to delete this file?</strong></div>',
									footer: ['<a class="btn btn-inverse pull-left" data-dismiss="popup" ><i class="icon icon-remove icon-white"></i> Close</a>', '<a class="btn btn-danger pull-right btn-delete-file"  data-loading-text="Deleting..." ><i class="icon icon-trash icon-white"></i>&nbsp; Delete</a>'].join(''),
									load: function(delete_popup) {
										delete_popup.find('.btn-delete-file').click(function(e) {
											var file_id = data.file_upload.id;
											e.preventDefault();
											$.post(datatill.url('files/delete_file'), {
												file_id: file_id
											}, function() {
												var api = delete_popup.data('popup'),
													parent = api.parent,
													parentApi = $(parent).data('popup');
												if (parentApi.parent) {
													delete_popup.data('popup').showParent(popup.data('popup').parent);
													if ($.isFunction(config.remove)) config.remove(file_id);
												} else {
													if (api) api.destroy = true;
													delete_popup.popup('hide');
													if ($.isFunction(config.remove)) config.remove(file_id);
												}
												if ($.isFunction(load_pics)) load_pics();
											}, 'json');
										});
									}
								});
							}).appendTo(popup.find('.popup-footer'));
						}
						btn.show().button('reset');
					}).prependTo('body');
					popup.on('popup.hidden', function() {
						frame.remove();
					});
				}
			});
	};
    $.fn.fileUploaderDynamic = function(options) {
        var ret = this;
        this.each(function(index) {
            if (!$(this).is(':file')) return;
            var self, original, data, widget, opt = $.isPlainObject(options) ? $.extend({}, options, true) : {};
            self = $(this);
            if (self.data('fileUploader')) {
                widget = self.closest('.fileuploader');
                self.data('fileuploader', null).off('change.fileuploader').insertAfter(widget);
                widget.remove();
            }
            widget = $(['<div class="fileuploader" >', '<div class="fileuploader-buttons" >','<span class="btn fileupload-remove pull-left hide">Undo</span>', '<div class="clearfix" ></div>', '</div>', '<div class="fileuploader-preview" ></div>', '</div>'].join(''));
            data = {
                hasFile: function() {
                    return widget.find('.fileuploader-preview').children().length > 0 && !widget.find('.fileuploader-original').length;
                },
                setFile: function(file) {
                    var preview = widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + (file.file_extension || '').toLowerCase() + '" ></span>', '<span class="fileuploader-text" >', '<strong>', $.htmlSpecialChars(file.file_name || ''), '</strong>', '(', $.htmlSpecialChars(file.file_mime_type || 'n/a'), ') ', ' - ', bytes(file.file_size, true), ', last modified: ', file.file_last_modified, '</span>', '</div>'].join('')),
                        width = preview.width();
                    if (file.file_mime_type.substr(0, 6) == 'image/') {
                        var wrap = $('<span class="fileuploader-image" ></span>').prependTo(preview).showLoading();
                        $('<img src="' + datatill.url('files/output/' + file.id+'/view') + '" style="visibility:visible;max-width:100%;" />').load(function() {
                            wrap.hideLoading();
                        }).prependTo(wrap);
                    }
                    original = preview.children();
                    return this;
                },
                showInput: function() {
                    self.show();
                    widget.find('.btn-file').append(self);
                },
                hideInput: function() {
                    self.detach();
                },
                setError: function(error) {
                    widget.append('<span class="error-text help-block text-danger" >' + $.htmlSpecialChars(error) + '</span>');
                }
            };
            self.replaceWith(widget).data('fileuploader', data);
            widget.find('.fileupload-remove').click(function() {
                var preview = widget.find('.fileuploader-preview').empty();
                if (original && original.length) preview.append(original);
                $(this).hide();
            });
            if (opt.file) data.setFile(opt.file);
            self.on('change.fileuploader', function(e) {
                if (window.File && window.FileReader && window.FileList && window.Blob && !isWebkit) {
                    var file = e.target.files[0],
                        val, ext, reader, preview, img, width = 0,
                        dt;
                    if (file) {
                        dt = file.lastModifiedDate;
                        val = ['<strong>', $.htmlSpecialChars(file.name), '</strong>', '(', $.htmlSpecialChars(file.type || 'n/a'), ') ', ' - ', bytes(file.size, true), ', last modified: ', dt ? [dt.getFullYear(), '-', dt.getMonth(), '-', dt.getDate(), ' ', dt.getHours(), ':', dt.getMinutes(), ':', dt.getSeconds()].join('') : 'n/a'].join('');
                        ext = (file.name || '').split('.').pop().toLowerCase();
                        if ((file.type && file.type.substr(0, 6) == 'image/')) {
                            widget.find('.fileuploader-preview').html(['<span class="fileuploader-image" ></span>', '<div class="fileuploader-plain file-uploader-original" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
                            preview = widget.find('.fileuploader-image');
                            width = preview.width();
                            var reader = new FileReader();
                            reader.onload = function(e) {
                                img = $('<img src="' + e.target.result + '" style="visibility:hidden;" />').load(function() {
                                    var w = $(this).width();
                                    $(this).css('visibility', 'visible');
                                    if (w > width) $(this).width(width);
                                }).appendTo(preview);
                            };
                            reader.readAsDataURL(file);
                        } else widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
                    }
                } else {
                    val = self.val() + '', ext = val.split('.').pop().toLowerCase();
                    widget.find('.fileuploader-preview').html(['<div class="fileuploader-plain" >', '<span class="fileuploader-icon ext-icon ext-icon-' + ext + '" ></span>', '<span class="fileuploader-text" >' + val + '</span>', '</div>'].join(''));
                }
                widget.find('.fileupload-remove').show();
            });
            data.showInput();
        });
        return ret;
    };
    $.uploadModalDynamic = function(config) {
        config = config || {};
        //if (!config.file_id) delete config.file_id;
        var url = datatill.url('files/upload_file_dynamic/' + (config.file_id || 0) + '/' + (config.thumb || 0)),
		name = 'file_upload_frame_' + (+new Date()),
		popup = $.popup({
			header: '<h4><i class="icon-file" ></i> File</h4>',
			body: [
				'<form method="post" enctype="multipart/form-data" target="' + name + '" action="' + url + '" >',
				'<div class="fileupload fileupload-new" data-provides="fileupload">', config.info ||
				'<div class="well" >',
				'<input type="file" name="file_upload" style="display:none;" />',
				'<hr style="margin-top: 5px; margin-bottom: 5px;">',
				'<div class="input-group center-block">',
				'<label style="display:none;">Name</label>',
				'<input style="display:none;" type="text" name="file_upload[file_name]" class="form-control input-lg" value="file">',
				'</div>',
				'<div class="input-group center-block">',
				'<label style="display:none">Description</label>',
				'<textarea name="file_upload[file_caption]" class="form-control input-lg" style="resize:none;" rows=2 ></textarea>',
				'</div>',
				'<div class="clearfix"></div>',
				'</div>',
				'</div>',
				'</form>'
			].join(''),
			footer: ['<a class="btn btn-inverse pull-left" data-dismiss="popup" ><i class="icon icon-remove icon-white"></i> Close</a>', '<a class="btn btn-info pull-right btn-save-file" style="display:none;"  data-loading-text="Saving..." >Save <i class="icon icon-chevron-right icon-white"></i></a>'].join(''),
			parent: config.parent,
			load: function(popup) {
				popup.showLoading();
				var init = false,
					btn = popup.find('.btn-save-file').click(function() {
						form.submit();
					}),
					fileInput = popup.find(':file'),
					fileUploaderDynamic, form = popup.find('form').submit(function() {
						fileUploaderDynamic = fileInput.data('fileuploader');
						if (!fileUploaderDynamic.hasFile()) fileUploaderDynamic.hideInput();
						btn.button('loading');
					});
				var frame = $('<iframe name="' + name + '" src="' + url + '" style="display:none;" />').load(function() {
					var win = this.contentWindow,
						data = win.data,
						abort = false,
						resetFile = true;
					if (!$.isPlainObject(data)) data = {};
					if (!init) {
						init = true;
						popup.hideLoading();
						if (data.file_upload) {
							resetFile = false;
							fileInput.fileUploaderDynamic({
								file: data.file_upload
							});
							form.append('<input type="hidden" value="' + $.htmlSpecialChars(data.file_upload.id) + '" name="file_upload[file_id]" />');
						} else {
							fileInput.fileUploaderDynamic();
							form.append('<input type="hidden" value="' + $.htmlSpecialChars(config.file_relation || '') + '" name="file_upload[file_relation]" />');
							form.append('<input type="hidden" value="' + $.htmlSpecialChars(config.file_relation_id || 0) + '" name="file_upload[file_relation_id]" />');
						}
					} else if (fileUploaderDynamic) fileUploaderDynamic.showInput();
					if ($.isFunction(config.load)) config.load(data, popup);
					if ($.isFunction(config.save) && data.upload_id) abort = config.save(data, popup);
					if (abort === true) return;
					form.find('.error-text').remove();
					if (data.errors && !$.isEmptyObject(data.errors)) {
						$.each(data.errors, function(key, val) {
							var input = form.find('[name="' + key + '"]'),
								type = input.attr('type');
							if (type && type.toUpperCase() == 'FILE') {
								if (fileUploaderDynamic) fileUploaderDynamic.setError(val);
							} else if (input.length) $('<span class="error-text help-block text-danger" >' + val + '</span>').insertAfter(input);
						});
						form.prepend('<div class="error-text alert alert-danger" >Errors have occured</div>');
						popup.closest('.popup-scrollable').scrollTop(0);
					}
					if (data.file_upload) {
						if (resetFile) fileInput.data('fileuploader').setFile(data.file_upload);
						$.each(data.file_upload, function(key, val) {
							var input = form.find('[name="file_upload[' + key + ']"]');
							if (!input.length) form.append('<input type="hidden" name="file_upload[' + key + ']" value="' + $.htmlSpecialChars(val) + '" />');
							else input.val($.htmlSpecialChars(val));
						});
						var prev = popup.find('textarea[name="file_upload[file_caption]"]');
						popup.find('.btn-download-file').remove();
						$('<hr/><a class="btn btn-charcoal pull-right btn-download-file" style="margin-top: 10px; margin-bottom: -10px;" ><i class="fa fa-download "></i>&nbsp;Download </a><div class="clearfix" ></div>').insertAfter(prev);
						popup.find('.btn-download-file').click(function(e) {
							e.preventDefault();
							//console.log("data",data);
							window.open(datatill.url('files/output/' + data.file_id + '/download'), '_blank');
						});
						popup.find('.btn-delete-file').remove();
						$('<a class="btn  btn-danger pull-right btn-delete-file"  ><i class="icon icon-trash icon-white "></i>&nbsp; Delete </a>').click(function(e) {
							e.preventDefault();
							$.popup({
								parent: popup,
								header: '<h4>Confirm</h4>',
								body: '<div class="alert alert-danger"><strong>Are you sure you want to delete this file?</strong></div>',
								footer: ['<a class="btn btn-inverse pull-left" data-dismiss="popup" ><i class="icon icon-remove icon-white"></i> Close</a>', '<a class="btn btn-danger pull-right btn-delete-file"  data-loading-text="Deleting..." ><i class="icon icon-trash icon-white"></i>&nbsp; Delete</a>'].join(''),
								load: function(delete_popup) {
									delete_popup.find('.btn-delete-file').click(function(e) {
										var file_id = data.file_upload.id;
										e.preventDefault();
										$.post(datatill.url('files/delete_file_dynamic'), {
											file_id: file_id
										}, function() {
											var api = delete_popup.data('popup'),
												parent = api.parent,
												parentApi = $(parent).data('popup');
											if (parentApi.parent) {
												delete_popup.data('popup').showParent(popup.data('popup').parent);
												if ($.isFunction(config.remove)) config.remove(file_id);
											} else {
												if (api) api.destroy = true;
												delete_popup.popup('hide');
												if ($.isFunction(config.remove)) config.remove(file_id);
											}
											//Added new delete function
											if ($.isFunction(config.delete)) config.delete(data, popup);
										}, 'json');
									});
								}
							});
						}).appendTo(popup.find('.popup-footer'));
					}
					btn.show().button('reset');
				}).prependTo('body');
				popup.on('popup.hidden', function() {
					frame.remove();
				});
			}
		});
    };
})(jQuery);
